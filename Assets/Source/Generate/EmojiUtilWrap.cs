//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class EmojiUtilWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(EmojiUtil), typeof(System.Object));
		L.RegFunction("GetEmoji", GetEmoji);
		L.RegFunction("Parse", Parse);
		L.RegFunction("New", _CreateEmojiUtil);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Emojies", get_Emojies, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateEmojiUtil(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				string arg0 = ToLua.CheckString(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				EmojiUtil obj = new EmojiUtil(arg0, arg1);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: EmojiUtil.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetEmoji(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			EmojiUtil obj = (EmojiUtil)ToLua.CheckObject<EmojiUtil>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string o = obj.GetEmoji(arg0);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Parse(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			EmojiUtil obj = (EmojiUtil)ToLua.CheckObject<EmojiUtil>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string o = obj.Parse(arg0);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Emojies(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EmojiUtil obj = (EmojiUtil)o;
			System.Collections.Generic.Dictionary<uint,FairyGUI.Emoji> ret = obj.Emojies;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Emojies on a nil value");
		}
	}
}

