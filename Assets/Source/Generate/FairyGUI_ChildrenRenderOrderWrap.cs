//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FairyGUI_ChildrenRenderOrderWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(FairyGUI.ChildrenRenderOrder));
		L.RegVar("Ascent", get_Ascent, null);
		L.RegVar("Descent", get_Descent, null);
		L.RegVar("Arch", get_Arch, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<FairyGUI.ChildrenRenderOrder>.Check = CheckType;
		StackTraits<FairyGUI.ChildrenRenderOrder>.Push = Push;
	}

	static void Push(IntPtr L, FairyGUI.ChildrenRenderOrder arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(FairyGUI.ChildrenRenderOrder), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Ascent(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.ChildrenRenderOrder.Ascent);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Descent(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.ChildrenRenderOrder.Descent);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Arch(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.ChildrenRenderOrder.Arch);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		FairyGUI.ChildrenRenderOrder o = (FairyGUI.ChildrenRenderOrder)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

