//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FairyGUI_TransitionActionTypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(FairyGUI.TransitionActionType));
		L.RegVar("XY", get_XY, null);
		L.RegVar("Size", get_Size, null);
		L.RegVar("Scale", get_Scale, null);
		L.RegVar("Pivot", get_Pivot, null);
		L.RegVar("Alpha", get_Alpha, null);
		L.RegVar("Rotation", get_Rotation, null);
		L.RegVar("Color", get_Color, null);
		L.RegVar("Animation", get_Animation, null);
		L.RegVar("Visible", get_Visible, null);
		L.RegVar("Sound", get_Sound, null);
		L.RegVar("Transition", get_Transition, null);
		L.RegVar("Shake", get_Shake, null);
		L.RegVar("ColorFilter", get_ColorFilter, null);
		L.RegVar("Skew", get_Skew, null);
		L.RegVar("Text", get_Text, null);
		L.RegVar("Icon", get_Icon, null);
		L.RegVar("Unknown", get_Unknown, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<FairyGUI.TransitionActionType>.Check = CheckType;
		StackTraits<FairyGUI.TransitionActionType>.Push = Push;
	}

	static void Push(IntPtr L, FairyGUI.TransitionActionType arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(FairyGUI.TransitionActionType), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_XY(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.TransitionActionType.XY);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Size(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.TransitionActionType.Size);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Scale(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.TransitionActionType.Scale);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Pivot(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.TransitionActionType.Pivot);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Alpha(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.TransitionActionType.Alpha);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Rotation(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.TransitionActionType.Rotation);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Color(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.TransitionActionType.Color);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Animation(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.TransitionActionType.Animation);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Visible(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.TransitionActionType.Visible);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Sound(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.TransitionActionType.Sound);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Transition(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.TransitionActionType.Transition);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Shake(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.TransitionActionType.Shake);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ColorFilter(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.TransitionActionType.ColorFilter);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Skew(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.TransitionActionType.Skew);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Text(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.TransitionActionType.Text);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Icon(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.TransitionActionType.Icon);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Unknown(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.TransitionActionType.Unknown);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		FairyGUI.TransitionActionType o = (FairyGUI.TransitionActionType)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

