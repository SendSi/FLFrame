//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FairyGUI_ButtonModeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(FairyGUI.ButtonMode));
		L.RegVar("Common", get_Common, null);
		L.RegVar("Check", get_Check, null);
		L.RegVar("Radio", get_Radio, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<FairyGUI.ButtonMode>.Check = CheckType;
		StackTraits<FairyGUI.ButtonMode>.Push = Push;
	}

	static void Push(IntPtr L, FairyGUI.ButtonMode arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(FairyGUI.ButtonMode), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Common(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.ButtonMode.Common);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Check(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.ButtonMode.Check);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Radio(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.ButtonMode.Radio);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		FairyGUI.ButtonMode o = (FairyGUI.ButtonMode)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

